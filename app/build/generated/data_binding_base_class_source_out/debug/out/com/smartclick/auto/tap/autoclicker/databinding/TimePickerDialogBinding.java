// Generated by view binder compiler. Do not edit!
package com.smartclick.auto.tap.autoclicker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.NumberPicker;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.smartclick.auto.tap.autoclicker.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TimePickerDialogBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView cancel;

  @NonNull
  public final LinearLayout linearLayout6;

  @NonNull
  public final TextView msg;

  @NonNull
  public final NumberPicker numpickerHours;

  @NonNull
  public final NumberPicker numpickerMinutes;

  @NonNull
  public final NumberPicker numpickerSeconds;

  @NonNull
  public final TextView ok;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView textView3;

  private TimePickerDialogBinding(@NonNull RelativeLayout rootView, @NonNull ImageView cancel,
      @NonNull LinearLayout linearLayout6, @NonNull TextView msg,
      @NonNull NumberPicker numpickerHours, @NonNull NumberPicker numpickerMinutes,
      @NonNull NumberPicker numpickerSeconds, @NonNull TextView ok, @NonNull TextView textView2,
      @NonNull TextView textView3) {
    this.rootView = rootView;
    this.cancel = cancel;
    this.linearLayout6 = linearLayout6;
    this.msg = msg;
    this.numpickerHours = numpickerHours;
    this.numpickerMinutes = numpickerMinutes;
    this.numpickerSeconds = numpickerSeconds;
    this.ok = ok;
    this.textView2 = textView2;
    this.textView3 = textView3;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TimePickerDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TimePickerDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.time_picker_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TimePickerDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cancel;
      ImageView cancel = ViewBindings.findChildViewById(rootView, id);
      if (cancel == null) {
        break missingId;
      }

      id = R.id.linearLayout6;
      LinearLayout linearLayout6 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout6 == null) {
        break missingId;
      }

      id = R.id.msg;
      TextView msg = ViewBindings.findChildViewById(rootView, id);
      if (msg == null) {
        break missingId;
      }

      id = R.id.numpicker_hours;
      NumberPicker numpickerHours = ViewBindings.findChildViewById(rootView, id);
      if (numpickerHours == null) {
        break missingId;
      }

      id = R.id.numpicker_minutes;
      NumberPicker numpickerMinutes = ViewBindings.findChildViewById(rootView, id);
      if (numpickerMinutes == null) {
        break missingId;
      }

      id = R.id.numpicker_seconds;
      NumberPicker numpickerSeconds = ViewBindings.findChildViewById(rootView, id);
      if (numpickerSeconds == null) {
        break missingId;
      }

      id = R.id.ok;
      TextView ok = ViewBindings.findChildViewById(rootView, id);
      if (ok == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      return new TimePickerDialogBinding((RelativeLayout) rootView, cancel, linearLayout6, msg,
          numpickerHours, numpickerMinutes, numpickerSeconds, ok, textView2, textView3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
