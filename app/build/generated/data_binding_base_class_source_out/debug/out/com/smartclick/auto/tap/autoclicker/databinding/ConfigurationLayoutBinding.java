// Generated by view binder compiler. Do not edit!
package com.smartclick.auto.tap.autoclicker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.smartclick.auto.tap.autoclicker.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ConfigurationLayoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView copy;

  @NonNull
  public final RelativeLayout mainRl;

  @NonNull
  public final ImageView more;

  @NonNull
  public final TextView name;

  @NonNull
  public final ConstraintLayout pcmCl;

  @NonNull
  public final ImageView play;

  private ConfigurationLayoutBinding(@NonNull RelativeLayout rootView, @NonNull ImageView copy,
      @NonNull RelativeLayout mainRl, @NonNull ImageView more, @NonNull TextView name,
      @NonNull ConstraintLayout pcmCl, @NonNull ImageView play) {
    this.rootView = rootView;
    this.copy = copy;
    this.mainRl = mainRl;
    this.more = more;
    this.name = name;
    this.pcmCl = pcmCl;
    this.play = play;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ConfigurationLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ConfigurationLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.configuration_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ConfigurationLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.copy;
      ImageView copy = ViewBindings.findChildViewById(rootView, id);
      if (copy == null) {
        break missingId;
      }

      id = R.id.mainRl;
      RelativeLayout mainRl = ViewBindings.findChildViewById(rootView, id);
      if (mainRl == null) {
        break missingId;
      }

      id = R.id.more;
      ImageView more = ViewBindings.findChildViewById(rootView, id);
      if (more == null) {
        break missingId;
      }

      id = R.id.name;
      TextView name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.pcmCl;
      ConstraintLayout pcmCl = ViewBindings.findChildViewById(rootView, id);
      if (pcmCl == null) {
        break missingId;
      }

      id = R.id.play;
      ImageView play = ViewBindings.findChildViewById(rootView, id);
      if (play == null) {
        break missingId;
      }

      return new ConfigurationLayoutBinding((RelativeLayout) rootView, copy, mainRl, more, name,
          pcmCl, play);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
