// Generated by view binder compiler. Do not edit!
package com.smartclick.auto.tap.autoclicker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.smartclick.auto.tap.autoclicker.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPermissionBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView accessibility;

  @NonNull
  public final RelativeLayout allow;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final FrameLayout nativeAdContainerPermission;

  @NonNull
  public final ImageView overlay;

  @NonNull
  public final ImageView storage;

  @NonNull
  public final ImageView textLogo;

  private ActivityPermissionBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageView accessibility, @NonNull RelativeLayout allow,
      @NonNull LinearLayout linearLayout, @NonNull FrameLayout nativeAdContainerPermission,
      @NonNull ImageView overlay, @NonNull ImageView storage, @NonNull ImageView textLogo) {
    this.rootView = rootView;
    this.accessibility = accessibility;
    this.allow = allow;
    this.linearLayout = linearLayout;
    this.nativeAdContainerPermission = nativeAdContainerPermission;
    this.overlay = overlay;
    this.storage = storage;
    this.textLogo = textLogo;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPermissionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPermissionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_permission, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPermissionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.accessibility;
      ImageView accessibility = ViewBindings.findChildViewById(rootView, id);
      if (accessibility == null) {
        break missingId;
      }

      id = R.id.allow;
      RelativeLayout allow = ViewBindings.findChildViewById(rootView, id);
      if (allow == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.native_ad_container_permission;
      FrameLayout nativeAdContainerPermission = ViewBindings.findChildViewById(rootView, id);
      if (nativeAdContainerPermission == null) {
        break missingId;
      }

      id = R.id.overlay;
      ImageView overlay = ViewBindings.findChildViewById(rootView, id);
      if (overlay == null) {
        break missingId;
      }

      id = R.id.storage;
      ImageView storage = ViewBindings.findChildViewById(rootView, id);
      if (storage == null) {
        break missingId;
      }

      id = R.id.textLogo;
      ImageView textLogo = ViewBindings.findChildViewById(rootView, id);
      if (textLogo == null) {
        break missingId;
      }

      return new ActivityPermissionBinding((RelativeLayout) rootView, accessibility, allow,
          linearLayout, nativeAdContainerPermission, overlay, storage, textLogo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
