// Generated by view binder compiler. Do not edit!
package com.smartclick.auto.tap.autoclicker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.smartclick.auto.tap.autoclicker.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MultiModeSettingDialogBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout afterBgLl;

  @NonNull
  public final ImageView back;

  @NonNull
  public final ImageView cancel;

  @NonNull
  public final LinearLayout detailsTwo;

  @NonNull
  public final RelativeLayout header;

  @NonNull
  public final LinearLayout linearLayout7;

  @NonNull
  public final EditText name;

  @NonNull
  public final ImageView noc;

  @NonNull
  public final EditText nocEt;

  @NonNull
  public final RelativeLayout popupRlOne;

  @NonNull
  public final ImageView runInfinite;

  @NonNull
  public final ImageView runTimer;

  @NonNull
  public final TextView save;

  @NonNull
  public final TextView timerTv;

  @NonNull
  public final TextView tv1;

  @NonNull
  public final TextView tv2;

  private MultiModeSettingDialogBinding(@NonNull RelativeLayout rootView,
      @NonNull LinearLayout afterBgLl, @NonNull ImageView back, @NonNull ImageView cancel,
      @NonNull LinearLayout detailsTwo, @NonNull RelativeLayout header,
      @NonNull LinearLayout linearLayout7, @NonNull EditText name, @NonNull ImageView noc,
      @NonNull EditText nocEt, @NonNull RelativeLayout popupRlOne, @NonNull ImageView runInfinite,
      @NonNull ImageView runTimer, @NonNull TextView save, @NonNull TextView timerTv,
      @NonNull TextView tv1, @NonNull TextView tv2) {
    this.rootView = rootView;
    this.afterBgLl = afterBgLl;
    this.back = back;
    this.cancel = cancel;
    this.detailsTwo = detailsTwo;
    this.header = header;
    this.linearLayout7 = linearLayout7;
    this.name = name;
    this.noc = noc;
    this.nocEt = nocEt;
    this.popupRlOne = popupRlOne;
    this.runInfinite = runInfinite;
    this.runTimer = runTimer;
    this.save = save;
    this.timerTv = timerTv;
    this.tv1 = tv1;
    this.tv2 = tv2;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MultiModeSettingDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MultiModeSettingDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.multi_mode_setting_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MultiModeSettingDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.afterBgLl;
      LinearLayout afterBgLl = ViewBindings.findChildViewById(rootView, id);
      if (afterBgLl == null) {
        break missingId;
      }

      id = R.id.back;
      ImageView back = ViewBindings.findChildViewById(rootView, id);
      if (back == null) {
        break missingId;
      }

      id = R.id.cancel;
      ImageView cancel = ViewBindings.findChildViewById(rootView, id);
      if (cancel == null) {
        break missingId;
      }

      id = R.id.detailsTwo;
      LinearLayout detailsTwo = ViewBindings.findChildViewById(rootView, id);
      if (detailsTwo == null) {
        break missingId;
      }

      id = R.id.header;
      RelativeLayout header = ViewBindings.findChildViewById(rootView, id);
      if (header == null) {
        break missingId;
      }

      id = R.id.linearLayout7;
      LinearLayout linearLayout7 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout7 == null) {
        break missingId;
      }

      id = R.id.name;
      EditText name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.noc;
      ImageView noc = ViewBindings.findChildViewById(rootView, id);
      if (noc == null) {
        break missingId;
      }

      id = R.id.nocEt;
      EditText nocEt = ViewBindings.findChildViewById(rootView, id);
      if (nocEt == null) {
        break missingId;
      }

      id = R.id.popupRlOne;
      RelativeLayout popupRlOne = ViewBindings.findChildViewById(rootView, id);
      if (popupRlOne == null) {
        break missingId;
      }

      id = R.id.runInfinite;
      ImageView runInfinite = ViewBindings.findChildViewById(rootView, id);
      if (runInfinite == null) {
        break missingId;
      }

      id = R.id.runTimer;
      ImageView runTimer = ViewBindings.findChildViewById(rootView, id);
      if (runTimer == null) {
        break missingId;
      }

      id = R.id.save;
      TextView save = ViewBindings.findChildViewById(rootView, id);
      if (save == null) {
        break missingId;
      }

      id = R.id.timerTv;
      TextView timerTv = ViewBindings.findChildViewById(rootView, id);
      if (timerTv == null) {
        break missingId;
      }

      id = R.id.tv1;
      TextView tv1 = ViewBindings.findChildViewById(rootView, id);
      if (tv1 == null) {
        break missingId;
      }

      id = R.id.tv2;
      TextView tv2 = ViewBindings.findChildViewById(rootView, id);
      if (tv2 == null) {
        break missingId;
      }

      return new MultiModeSettingDialogBinding((RelativeLayout) rootView, afterBgLl, back, cancel,
          detailsTwo, header, linearLayout7, name, noc, nocEt, popupRlOne, runInfinite, runTimer,
          save, timerTv, tv1, tv2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
